(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Calculator = (function () {
    function Calculator(config) {
        this.config = config;
        var taxConfig = config.tax;
        for (var i = 0; i < taxConfig.length; i++) {
            var adjust = 0;
            var curConf = taxConfig[i];
            for (var j = i + 1; j < taxConfig.length; j++) {
                adjust += (taxConfig[j].max - taxConfig[j].min) * (curConf.ratio - taxConfig[j].ratio);
            }
            curConf.adjust = adjust;
        }
        for (var i = 0; i < taxConfig.length; i++) {
            var curConf = taxConfig[i];
            curConf.minInsuranceAndTaxAfter = this.caculateInsuranceAndTaxAfter(curConf.min);
        }
    }
    Calculator.prototype.caculateInsuranceAndTaxAfter = function (total) {
        var sumPersonalRatio = this.getSum(this.config.personal.ratio);
        var sumPersonalExtra = this.getSum(this.config.personal.extra);
        var insuranceAfter = total * (1 - sumPersonalRatio) - sumPersonalExtra;
        var taxConfig = this.config.tax;
        var tax = 0;
        for (var i = 0; i < taxConfig.length; i++) {
            var curConf = taxConfig[i];
            if (insuranceAfter >= curConf.min) {
                tax = insuranceAfter * curConf.ratio - curConf.adjust;
                break;
            }
        }
        return parseFloat((insuranceAfter - tax).toFixed(2));
    };
    Calculator.prototype.getDetail = function (total) {
        var sumPersonalRatio = this.getSum(this.config.personal.ratio);
        var sumPersonalExtra = this.getSum(this.config.personal.extra);
        var insuranceAfter = total * (1 - sumPersonalRatio) - sumPersonalExtra;
        var taxConfig = this.config.tax;
        var tax = 0;
        for (var i = 0; i < taxConfig.length; i++) {
            var curConf = taxConfig[i];
            if (insuranceAfter >= curConf.min) {
                tax = insuranceAfter * curConf.ratio - curConf.adjust;
                break;
            }
        }
        var str = '明细<br>';
        str += '<br>个人缴纳<br>';
        str += '&nbsp;&nbsp;缴税￥' + parseFloat(tax.toFixed(2)) + '<br>';
        for (var i = 0; i < this.config.personal.ratio.length; i++) {
            var item = this.config.personal.ratio[i];
            str += '&nbsp;&nbsp;' + item.type + '【' + (item.value * 100) + '%】' + '￥' + parseFloat((total * item.value).toFixed(2)) + '<br>';
        }
        str += '<br>公司缴纳<br>';
        for (var i = 0; i < this.config.company.ratio.length; i++) {
            var item = this.config.company.ratio[i];
            str += '&nbsp;&nbsp;' + item.type + '【' + (item.value * 100) + '%】' + '￥' + parseFloat((total * item.value).toFixed(2)) + '<br>';
        }
        return str;
    };
    Calculator.prototype.getSum = function (arr) {
        var sum = 0;
        for (var i = 0; i < arr.length; i++) {
            sum += arr[i].value;
        }
        return sum;
    };
    Calculator.prototype.caculateInsuranceAndTaxBefore = function (total) {
        var taxConfig = this.config.tax;
        var beforeTax = total;
        for (var i = 0; i < taxConfig.length; i++) {
            var curConf = taxConfig[i];
            if (total >= curConf.minInsuranceAndTaxAfter) {
                beforeTax = (total - curConf.adjust) / (1 - curConf.ratio);
                break;
            }
        }
        var sumPersonalRatio = this.getSum(this.config.personal.ratio);
        var sumPersonalExtra = this.getSum(this.config.personal.extra);
        return parseFloat(((beforeTax + sumPersonalExtra) / (1 - sumPersonalRatio)).toFixed(2));
    };
    return Calculator;
}());
exports.Calculator = Calculator;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var calculator_1 = require("./calculator");
var calc = new calculator_1.Calculator({
    personal: {
        ratio: [{
                type: '社会保险',
                value: .08
            }, {
                type: '医疗保险',
                value: .02
            }, {
                type: '失业保险',
                value: .005
            }, {
                type: '住房公积金',
                value: .12
            }],
        extra: []
    },
    company: {
        ratio: [{
                type: '社会保险',
                value: .2
            }, {
                type: '医疗保险',
                value: .08
            }, {
                type: '失业保险',
                value: .015
            }, {
                type: '生育保险',
                value: .005
            }, {
                type: '住房公积金',
                value: .12
            }],
        extra: []
    },
    tax: [
        { min: 83500, max: Number.MAX_VALUE, ratio: .45 },
        { min: 58500, max: 83500, ratio: .35 },
        { min: 38500, max: 58500, ratio: .30 },
        { min: 12500, max: 38500, ratio: .25 },
        { min: 9000, max: 12500, ratio: .2 },
        { min: 5000, max: 9000, ratio: .1 },
        { min: 3500, max: 5000, ratio: .03 },
        { min: 0, max: 3500, ratio: 0 }
    ]
});
var serverSentenceIndex = 0;
var serverSentences = [
    '请选择计算类型<br>输入“1”税前计算税后<br>输入“2”税后计算税前',
    '请输入金额',
    '您的$type工资为￥$amount'
];
var clientInfo;
var screen = document.querySelector('.screen');
var clientInput = document.querySelector('#clientInput');
var clientSend = document.querySelector('#clientSend');
var clientReset = document.querySelector('#clientReset');
clientInput.addEventListener('keydown', function (e) {
    var key = e.key;
    if (key.toLocaleLowerCase() == 'enter')
        clientPlay();
    if (key.toLocaleLowerCase() != 'backspace' && isNaN(parseFloat(key)))
        e.preventDefault();
});
clientReset.addEventListener('click', resetGame);
clientSend.addEventListener('click', clientPlay);
function resetGame() {
    serverSentenceIndex = 0;
    clientInfo = [];
    screen.innerHTML = '';
    serverPlay();
}
function serverPlay() {
    var serverSentence = serverSentences[serverSentenceIndex++];
    var type;
    var amount;
    if (serverSentence.indexOf('$') > 0) {
        if (clientInfo[0] == 1) {
            type = '税后';
            amount = calc.caculateInsuranceAndTaxAfter(clientInfo[1]);
        }
        else {
            type = '税前';
            amount = calc.caculateInsuranceAndTaxBefore(clientInfo[1]);
        }
        serverSentence = serverSentence.replace('$type', type);
        serverSentence = serverSentence.replace('$amount', amount + '');
    }
    var html = "<div class=\"chat server\"><p>" + serverSentence + "</p></div>";
    screen.innerHTML += html;
    if (serverSentenceIndex >= serverSentences.length) {
        var detail = void 0;
        if (type == '税前') {
            detail = calc.getDetail(amount);
        }
        else {
            detail = calc.getDetail(clientInfo[1]);
        }
        showServerSentence(detail);
        showServerSentence('点击重置按钮重新查询');
    }
}
function showServerSentence(serverSentence) {
    var html = "<div class=\"chat server\"><p>" + serverSentence + "</p></div>";
    screen.innerHTML += html;
}
function clientPlay() {
    var input = clientInput.value;
    if (input == '' || serverSentenceIndex >= serverSentences.length)
        return;
    var html = "<div class=\"chat client\"><p>" + input + "</p></div>";
    screen.innerHTML += html;
    clientInfo.push(parseFloat(input));
    serverPlay();
    clientInput.value = '';
}
resetGame();
},{"./calculator":1}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
